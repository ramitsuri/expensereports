import com.ionspin.kotlin.bignum.decimal.BigDecimal;
import com.ramitsuri.expensereports.data.ReportType;
import com.ramitsuri.expensereports.data.Split;
import kotlin.collections.List;
import kotlinx.datetime.Instant;
import kotlinx.datetime.LocalDate;

--
-- Reports
--
CREATE TABLE IF NOT EXISTS ReportEntity(
    name TEXT NOT NULL PRIMARY KEY,
    year INTEGER NOT NULL,
    type INTEGER AS ReportType NOT NULL,
    generatedAt TEXT AS Instant NOT NULL,
    fetchedAt TEXT AS Instant NOT NULL,
    content TEXT NOT NULL
);

getReport:
SELECT * FROM ReportEntity
WHERE year = :year AND type = :type;

getReports:
SELECT * FROM ReportEntity
WHERE year IN :years AND type IN :types;

updateReport:
UPDATE ReportEntity
SET content = ?, generatedAt = ?, fetchedAt = ?
WHERE year = :year AND type = :type;

insertReport:
INSERT OR REPLACE INTO
ReportEntity(name, year, type,  generatedAt, fetchedAt, content)
VALUES (?, ?, ?, ?,?, ?);

deleteReports:
DELETE FROM ReportEntity;

--
-- Transactions
--
CREATE TABLE IF NOT EXISTS TransactionEntity(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    year INTEGER NOT NULL,
    month INTEGER NOT NULL,
    date TEXT AS LocalDate NOT NULL,
    description TEXT NOT NULL,
    total TEXT AS BigDecimal NOT NULL,
    splits TEXT AS List<Split> NOT NULL
);

getTransactions:
SELECT * FROM TransactionEntity
WHERE year IN :years AND month IN :months;

insertTransaction:
INSERT OR REPLACE INTO
TransactionEntity(year, month, date, description, total, splits)
VALUES (?, ?, ?, ?,?, ?);

deleteTransactions:
DELETE FROM TransactionEntity
WHERE year = :year AND month = :month;